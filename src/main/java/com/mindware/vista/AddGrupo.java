package com.mindware.vista;

import com.mindware.domain.Grupo;
import com.mindware.mappers.GrupoMapper;
import com.mindware.services.GrupoService;
import com.mindware.util.MyBatisSqlSessionFactory;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.ui.*;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import de.steinwedel.messagebox.MessageBox;
import org.apache.ibatis.session.SqlSession;

import java.util.Date;
import java.util.List;

public class AddGrupo extends Window {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextField edtGrupo;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;
	@AutoGenerated
	private Button btnCerrar;
	@AutoGenerated
	private Button btnGuardar;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	private VerticalLayout verticalButton;
	private Table tableLeft;
	private Table tableRight;
//	private NativeButton btnGuardarGrupo;
	private Button btnMoveLeft;
	private Button btnMoveRight;
	private GrupoService grupoService;
	final Label current = new Label("Selected: -");


	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AddGrupo() {
		buildMainLayout();
		
		setContent(mainLayout);
		//setCompositionRoot(mainLayout);

		btnCerrar.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				close();
				
			}
		});
		btnGuardar.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				try {
					grupoService = new GrupoService();
					Date today = new Date();
					Grupo gr = new Grupo();
					gr.setEstado("ACTIVO");
					gr.setFechaCreacion(today);
					gr.setNombreGrupo(edtGrupo.getValue());
					gr.setNumeroMiembros(numeroMiembros());
					gr.setUsuarioId(1); // TODO add user code here
					Grupo grupo = grupoService.insertGrupo(gr);
					MessageBox.createInfo()
							.withCaption("Registro")
							.withMessage("Grupo creado")
							.open();
				}
				catch (Exception e) {
					MessageBox.createError()
							.withCaption("Error")
							.withMessage("Error al crear el Grupo")
							.withAbortButton()
							.open();
				}

			}
		});
	}

	private int numeroMiembros() {
		int i = tableRight.size();

		return i;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("400px");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("400px");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1, "top:60.0px;right:-1.0px;left:20.0px;");

		verticalButton = buildVerticalLayout_1();
		mainLayout.addComponent(verticalButton,"top:70.0px;right:-1.0px;left:400.0px;");
		
		// horizontalLayout_4
		horizontalLayout_4 = buildHorizontalLayout_4();
		mainLayout.addComponent(horizontalLayout_4, "top:360.0px;left:18.0px;");
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Nombre de Grupo:");
		mainLayout.addComponent(label_1, "top:22.0px;left:20.0px;");
		
		// edtGrupo
		edtGrupo = new TextField();
		edtGrupo.setImmediate(false);
		edtGrupo.setWidth("433px");
		edtGrupo.setHeight("24px");
		mainLayout.addComponent(edtGrupo, "top:20.0px;left:123.0px;");

		//btnGuardarGrupo
//		btnGuardarGrupo = new NativeButton();
//		btnGuardarGrupo.setCaption("Guardar Grupo");
//		btnGuardarGrupo.setImmediate(true);
//		btnGuardarGrupo.setWidth("120px");
//		btnGuardarGrupo.setHeight("-1px");
//		mainLayout.addComponent(btnGuardarGrupo,"top:20.0px;left:473.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("260px");
		horizontalLayout_1.setMargin(false);

		// Table left
		tableLeft = new Table();
		//Allow selection Items from  table
		tableLeft.setSelectable(true);
		// Send changes in selection immediately to server.r
		tableLeft.setImmediate(true);
		//desable selected null value
		tableLeft.setNullSelectionAllowed(false);
		tableLeft.setCaption("Contactos Disponibles");
		tableLeft.setImmediate(false);
		tableLeft.setWidth("370px");
		tableLeft.setHeight("250px");
		horizontalLayout_1.addComponent(tableLeft);

		// Table right
		tableRight = new Table();
		tableRight = new Table();
		//Allow selection Items from  table
		tableRight.setSelectable(true);
		// Send changes in selection immediately to server.r
		tableRight.setImmediate(true);
		//desable selected null value
		tableRight.setNullSelectionAllowed(false);
		tableRight.setCaption("Contactos Disponibles");
		tableRight.setImmediate(false);
		tableRight.setWidth("370px");
		tableRight.setHeight("250px");
		horizontalLayout_1.addComponent(tableRight);

		return horizontalLayout_1;
	}

	private VerticalLayout buildVerticalLayout_1 () {
		verticalButton = new VerticalLayout();
		verticalButton.setWidth("20%");
		// btnMoveRight
		btnMoveRight = new Button();
		btnMoveRight.setCaption(" >> ");
		verticalButton.addComponent(btnMoveRight);

		// btnMoveLeft
		btnMoveLeft = new Button();
		btnMoveLeft.setCaption(" << ");
		verticalButton.addComponent(btnMoveLeft);

		return  verticalButton;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_4() {
		// common part: create layout
		horizontalLayout_4 = new HorizontalLayout();
		horizontalLayout_4.setImmediate(false);
		horizontalLayout_4.setWidth("560px");
		horizontalLayout_4.setHeight("40px");
		horizontalLayout_4.setMargin(false);
		
		// btnGuardar
		btnGuardar = new Button();
		btnGuardar.setCaption("Guardar");
		btnGuardar.setImmediate(true);
		btnGuardar.setWidth("80px");
		btnGuardar.setHeight("-1px");
		horizontalLayout_4.addComponent(btnGuardar);
		horizontalLayout_4.setComponentAlignment(btnGuardar, Alignment.MIDDLE_RIGHT);

		// btnCerrar
		btnCerrar = new Button();
		btnCerrar.setCaption("Cerrar");
		btnCerrar.setImmediate(true);
		btnCerrar.setWidth("80px");
		btnCerrar.setHeight("-1px");
		horizontalLayout_4.addComponent(btnCerrar);
		horizontalLayout_4.setComponentAlignment(btnCerrar, Alignment.MIDDLE_RIGHT);
		
		return horizontalLayout_4;
	}

	private void HeaderTables() {
		tableLeft.addContainerProperty("Nombre Grupo",String.class,null);
		tableLeft.addContainerProperty("Grupo ID", Integer.class,null);

		tableRight.addContainerProperty("Nombre Grupo",String.class,null);
		tableRight.addContainerProperty("Grupo ID", Integer.class,null);
	}
	private void fillTables() {
		SqlSession sqlsession = MyBatisSqlSessionFactory.getSqlSession();
		GrupoMapper grupoMapper = sqlsession.getMapper(GrupoMapper.class);
		List<Grupo> grupos = grupoMapper.getGrupoMiembros(1);
		tableLeft.removeAllItems();

		for(Grupo grupo:grupos) {
			tableLeft.addItem(new Object[]{grupos.get(0),grupos.get(1)},grupo);
		}


	}
	private void clickTable() {
		tableLeft.addItemClickListener(new ItemClickEvent.ItemClickListener() {
			@Override
			public void itemClick(ItemClickEvent event) {
				Integer value = (Integer) event.getItem().getItemProperty("Grupo ID").getValue();
			}
		});

//		tableLeft.addValueChangeListener(new Property.ValueChangeListener() {
//			public void valueChange(Property.ValueChangeEvent event) {
//				current.setValue("Selected: " + tableLeft.getValue());
//			}
//		});

	}

}