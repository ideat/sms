package com.mindware.vista;

import com.mindware.domain.Contacto;
import com.mindware.domain.Grupo;
import com.mindware.services.GrupoService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.ui.*;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import de.steinwedel.messagebox.MessageBox;

import java.util.List;

public class GrupoForm extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;
	@AutoGenerated
	private Table tblMiembros;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private Table tblListaGrupos;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button btnComponer;
	@AutoGenerated
	private Button btnEliminar;
	@AutoGenerated
	private Button btnEditar;
	@AutoGenerated
	private Button btnNuevo;
	private static GrupoService grupoService;
    private int grupo;
	private String nombreGrupo;
    private Contacto contacto;

	public GrupoForm() {
		buildMainLayout();
		cabeceraTablas();
		setCompositionRoot(mainLayout);
		
		btnNuevo.addClickListener(new ClickListener() {
			public void buttonClick(ClickEvent event) {
				AddGrupo addGrupo = new AddGrupo();
				addGrupo.setModal(true);
				addGrupo.setWidth("900px");
				addGrupo.setHeight("460px");
				addGrupo.center();
				
				UI.getCurrent().addWindow(addGrupo);

				addGrupo.addCloseListener(new Window.CloseListener() {
					@Override
					public void windowClose(Window.CloseEvent e) {
						cabeceraTablas();
					}
				});

			}
		});

        selectTableGrupo();
		clickEditGrupo();
		componerMensaje();
	}

	//Componer mensaje para grupo seleccionado
	private void componerMensaje() {
		btnComponer.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				Window subWindowComponer = new Window("Componer Mensaje");
				Componer componerMensaje = new Componer();
				componerMensaje.setValueComboGrupo(nombreGrupo, grupo);
				subWindowComponer.setContent(componerMensaje);
				subWindowComponer.center();
				subWindowComponer.setModal(true);
				subWindowComponer.setWidth("700px");
				UI.getCurrent().addWindow(subWindowComponer);

				subWindowComponer.addCloseListener(new Window.CloseListener() {
					@Override
					public void windowClose(Window.CloseEvent e) {

					}
				});

			}
		});
	}

	//Edita el grupo seleccionado
	private void clickEditGrupo() {
		btnEditar.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				EditGrupo editGrupo = new EditGrupo(grupo, nombreGrupo);
				editGrupo.setModal(true);
				editGrupo.setWidth("900px");
				editGrupo.setHeight("460px");
				editGrupo.center();


				UI.getCurrent().addWindow(editGrupo);

				editGrupo.addCloseListener(new Window.CloseListener(){
					@Override
					public void windowClose(Window.CloseEvent e) {
						cabeceraTablas();
						llenarTabla();
					}
				});

			}
		});

	}
	//Selecciona grupo_id donde se realizo click en la tabla de grupos (tblListaGrupos)
	private void selectTableGrupo() {

		tblListaGrupos.addItemClickListener(new ItemClickEvent.ItemClickListener() {
            @Override
            public void itemClick(ItemClickEvent event) {
                Object value = event.getItemId();
                grupo = (Integer) tblListaGrupos.getItem(value).getItemProperty("ID").getValue();
				nombreGrupo = tblListaGrupos.getItem(value).getItemProperty("Grupo").getValue().toString();
                List<Contacto> contacto = grupoService.getContactosGrupo(grupo);
				if (contacto.size() > 0) {
					llenarContactos(contacto);
				} else {
					MessageBox.createInfo()
							.withCaption("Contactos Grupo")
							.withMessage("Grupo sin contactos")
							.open();
				}
            }
        });

	}

    private void llenarContactos(List<Contacto> contactos) {


            IndexedContainer containerContacto = new IndexedContainer();

            containerContacto.addContainerProperty("Celular", String.class, "");
            containerContacto.addContainerProperty("Contacto", String.class, "");
            containerContacto.addContainerProperty("Campo1", String.class, "");
            containerContacto.addContainerProperty("Campo2", String.class, "");
            containerContacto.addContainerProperty("Campo3", String.class, "");
        if (contactos.size()> 0) {
            for (Contacto contacto : contactos) {
				if (contacto != null) {
					Item item = containerContacto.addItem(contacto);
					item.getItemProperty("Celular").setValue(contacto.getCelular());
					item.getItemProperty("Contacto").setValue(contacto.getNombreContacto());
					item.getItemProperty("Campo1").setValue(contacto.getCampo1());
					item.getItemProperty("Campo2").setValue(contacto.getCampo2());
					item.getItemProperty("Campo3").setValue(contacto.getCampo3());
				}

            }
            tblMiembros.setContainerDataSource(containerContacto);
        }
    }


	private void cabeceraTablas(){
        tblListaGrupos.addContainerProperty("ID", Integer.class,null);
	    tblListaGrupos.addContainerProperty("Grupo", String.class,null);
		tblListaGrupos.addContainerProperty("Nro de contactos", Integer.class,null);
		tblMiembros.addContainerProperty("Miembros", String.class, null);

        llenarTabla();
	}

	private void llenarTabla() {
		grupoService = new GrupoService();
		List<Grupo> grupoMiembros = grupoService.getGrupoMiembros(1); //TODO cambiar el codigo de usuario logeado
        tblListaGrupos.removeAllItems();

        for (Grupo grupoMiembro:grupoMiembros) {
            tblListaGrupos.addItem(new Object[]{grupoMiembro.getGrupoId(),grupoMiembro.getNombreGrupo(),grupoMiembro.getNumeroMiembros()},grupoMiembro);
        }


	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1, "top:20.0px;right:0.0px;left:20.0px;");
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2, "top:80.0px;left:20.0px;");
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		mainLayout.addComponent(horizontalLayout_3, "top:340.0px;left:20.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("40px");
		horizontalLayout_1.setMargin(false);
		
		// btnNuevo
		btnNuevo = new Button();
		btnNuevo.setCaption("Nuevo");
		btnNuevo.setImmediate(true);
		btnNuevo.setWidth("100px");
		btnNuevo.setHeight("-1px");
		horizontalLayout_1.addComponent(btnNuevo);
		horizontalLayout_1.setComponentAlignment(btnNuevo, new Alignment(20));
		
		// btnEditar
		btnEditar = new Button();
		btnEditar.setCaption("Editar");
		btnEditar.setImmediate(true);
		btnEditar.setWidth("100px");
		btnEditar.setHeight("-1px");
		horizontalLayout_1.addComponent(btnEditar);
		horizontalLayout_1.setComponentAlignment(btnEditar, new Alignment(20));
		
		// btnEliminar
		btnEliminar = new Button();
		btnEliminar.setCaption("Eliminar");
		btnEliminar.setImmediate(true);
		btnEliminar.setWidth("100px");
		btnEliminar.setHeight("-1px");
		horizontalLayout_1.addComponent(btnEliminar);
		horizontalLayout_1.setComponentAlignment(btnEliminar, new Alignment(20));
		
		// btnComponer
		btnComponer = new Button();
		btnComponer.setCaption("Componer");
		btnComponer.setImmediate(true);
		btnComponer.setWidth("100px");
		btnComponer.setHeight("-1px");
		horizontalLayout_1.addComponent(btnComponer);
		horizontalLayout_1.setComponentAlignment(btnComponer, new Alignment(20));
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("100.0%");
		horizontalLayout_2.setHeight("240px");
		horizontalLayout_2.setMargin(false);
		
		// tblListaGrupos
		tblListaGrupos = new Table();
		tblListaGrupos.setImmediate(false);
		tblListaGrupos.setWidth("100.0%");
		tblListaGrupos.setHeight("240px");
		tblListaGrupos.setEnabled(true);
		tblListaGrupos.setSelectable(true);
		horizontalLayout_2.addComponent(tblListaGrupos);
		horizontalLayout_2.setExpandRatio(tblListaGrupos, 1.0f);
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("100.0%");
		horizontalLayout_3.setHeight("160px");
		horizontalLayout_3.setMargin(false);
		
		// tblMiembros
		tblMiembros = new Table();
		tblMiembros.setImmediate(false);
		tblMiembros.setWidth("100.0%");
		tblMiembros.setHeight("-1px");
		horizontalLayout_3.addComponent(tblMiembros);
		horizontalLayout_3.setExpandRatio(tblMiembros, 1.0f);
		
		return horizontalLayout_3;
	}

}
